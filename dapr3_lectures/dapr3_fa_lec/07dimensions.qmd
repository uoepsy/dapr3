---
title: "Measurement and Dimensionality"
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---

```{r}
#| label: setup
#| include: false
library(tidyverse)
library(patchwork)
source('_theme/theme_quarto.R')
```

# Course Overview

```{r}
#| echo: false
#| results: "asis"
block1_name = "multilevel modelling<br>working with group structured data"
block1_lecs = c("regression refresher",
                "the multilevel model",
                "more complex groupings",
                "centering, assumptions, and diagnostics",
                "recap")
block2_name = "factor analysis<br>working with multi-item measures"
block2_lecs = c(
  "measurement and dimensionality",
  "exploring underlying constructs (EFA)",
  "testing theoretical models (CFA)",
  "reliability and validity",
  "recap & exam prep"
  )


source("https://raw.githubusercontent.com/uoepsy/junk/main/R/course_table.R")
course_table(block1_name,block2_name,block1_lecs,block2_lecs,week=6)
```

:::{.center-x}
![](img_sandbox/halfway.gif){width=300}
:::

# This week {transition="slide"}

- Measurement!
- Multi-item measures

# Measurement

## Thorndike's Credo


> "Whatever exists at all exists in some amount. To know it thoroughly involves knowing its quantity as well as its quality."  
(Edward L. Thorndike. 1918)






## What is measurement?

::::{.columns}
:::{.column width="50%"}
> "The process of assigning numbers to represent properties"  
(Campbell, 1920)

:::
:::{.column width="50%"}
> "The assignment of numbers to objects or events according to rules"   
(Stevens, 1947)

:::
::::

:::{.incremental}

- At the foundations of all scientific inquiry

- Too often taken for granted

- Key question:  

    - **What do our numbers represent?**

:::
    

## Quantifying the unquantifiable?


::::{.columns}
:::{.column width="50%"}
<iframe width="560" height="315" src="https://www.youtube.com/embed/8x0COtH4Vrw?si=qgwvKTqC30O553u5" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
:::
:::{.column width="50%"}

```{r}
#| echo: false
magick::image_read("img_sandbox/si_units2.jpeg")
```


- Many things are experienced qualitatively, as matters of degree, and are not easily amenable to direct quantification

- We should always question whether our numbers truly represent a continuous quantity with homogeneous units

:::
::::

## Measurement in Psychology

:::{.incremental}

- Many psychological phenomena cannot be **observed** directly:
    - thoughts, feelings, behaviours etc.

- Grounded in natural language that we discuss every day
    - "aggression", "intelligence", "anxiety"

- Definitions are often **fuzzy** and **lack consensus**

- **Result:** Confusion and complexity in measurement, with scientific definitions often diverging from non-scientific definitions

:::

## What is a "construct"?

::::{.columns}
:::{.column width="50%"}
### What

- The thing we are intending to quantify

- In psychology, education etc:  
    - a (hopefully useful) abstraction about the world, derived from natural observations
    - often termed a "latent trait" or "ability" (typically denoted $\theta$). 
    
:::
:::{.column width="50%" .fragment}
### Why

- Simplifies the world and provide a shared language for scientific study

- Study the same phenomena across diverse contexts.  
    - e.g., what does **"leadership"** look like in hunter-gatherer societies, in the military and in the music industry?

:::
::::


## Constructs, measures and data

```{r}
#| echo: false
magick::image_read("img_sandbox/measurement.png")
```



## Example

> Are older people more satisfied with life? 112 people from 12 different dwellings (cities/towns) in Scotland. Information on their ages and some measure of life satisfaction.

```{r}
#| echo: true
d3 <- read_csv("https://uoepsy.github.io/data/lmm_lifesatscot.csv")
head(d3)
```

<br>

-   Did anyone stop to think - What is `lifesat` (i.e., life satisfaction)?

- is someone scoring 69 more than twice as "satisfied with life" as someone scoring 31?  


## Impact of differences in perspectives

::::{.columns}
:::{.column width="50%"}

-   Different operationalisations make it difficult to consolidate findings:

    -   **Jingle fallacy** - Using same name to denote different things
    -   **Jangle fallacy** - Using different names to denote same thing

> "Nobody wants to use somebody else's toothbrush"  
(Elson et al., 2023)

:::

:::{.column width="50%"}

```{r}
#| echo: false

magick::image_read("img_sandbox/standards.png")
```

:::
::::




## Impact of differences in perspectives

::::{.columns}
:::{.column width="50%"}

-   Different operationalisations make it difficult to consolidate findings:

    -   **Jingle fallacy** - Using same name to denote different things
    -   **Jangle fallacy** - Using different names to denote same thing

> "Nobody wants to use somebody else's toothbrush"  
(Elson et al., 2023)

:::

:::{.column width="50%"}

```{r}
#| echo: false

magick::image_read("img_sandbox/measure_proliferation.PNG")
```

:::
::::


## Psychometrics

::::{.columns}
:::{.column width="50%"}

:::{.incremental}

- Scientific discipline concerned with the construction of psychological measurements

- Connects observable phenomena (e.g., item responses) to theoretical attributes (e.g., life satisfaction)

    - Theoretical constructs are defined by their domains of observable behaviours

:::

:::
:::{.column width="50%"}

```{r}
#| echo: false
magick::image_read("img_sandbox/measurement.png")
```
:::
::::


## Types of psychometric tests

-   Tests of **typical performance**

    -   What participants do on a regular basis
    -   Examples: Interests, values, personality traits, political
        beliefs
    -   Real-world example: "Which Harry Potter house are you in?"


-   Tests of **maximal performance**

    -   What can participants do when exerting maximum effort
    -   Examples: Aptitude tests, exams, IQ tests
    -   Real-world example: Duolingo, Wordle, revision apps

<br>

-   For the most part, the same statistical models are used to evaluate both


## Applications of psychometric tests

-   **Education**

    -   Aptitude / ability tests (i.e., standard school tests)
    -   Vocational tests

-   **Business**

    -   Selection (e.g., personality, skills)
    -   Development (e.g., interests, leadership)
    -   Performance (e.g., well-being, engagement)

-   **Health**

    -   Mental health symptoms e.g., anxiety
    -   Clinical diagnoses e.g., personality disorders

-   **Key takeaway:** People make life-changing decisions using
    psychometric evidence every day


## Criteria for good psychometric tests

-   Lots of important applications, so psychometric tests must:

    -   **Assess what they are supposed to assess**
    -   **Be consistent and reliable**
    -   **Produce interpretable scores**
    -   Be relevant for specific populations
    -   Differentiate between people in a fair way
    
<br>

-   In this course we will cover first three and how psychologists
    evaluate, last two are context-dependent

## Testing and measurement are two distinct activities

> "When tests are automatically granted the status of measurement, they are that much more easily appropriated as vehicles for social injustice, even when this may well have been the opposite of the intent of the test designer."  
(Derek Briggs 2021)

::::{.columns}
:::{.column width="50%"}

![Alfred Binet (1857-1911) - 'the father of the intelligence test'](img_sandbox/binet.png){width=300}

:::
:::{.column width="50%"}

:::{.incremental}

- Binet's purpose: diagnostic classification to be able to target educational interventions

- adopted and implicitly taken as 'measurement' and used for group comparisons by advocates of eugenics in 20th century USA.

:::

:::
::::

## Representational not actual measurement

- We cannot take our ruler and measure "life satisfaction"

- We create tests and hope responses tell us something about the construct we are interested in

- **Important:** Data is only ever item responses, not the construct itself

- Psychometrics is **pseudo-representational**: useful representation of target construct rather than 'ground truth' of universe


## Measurement error

> All measurement is befuddled by error
>
> <p align="right">
>
> McNemar (1946, p.294)
>
> </p>

-   Every measurement we take contains some error, goal is to minimise
    it
-   Error can be:

    - **Random** = Unpredictable. Inconsistent values due to something specific to the measurement occasion

    - **Systematic** = Predictable. Consistent alteration of the
        observed score due to something constant about the measurement
        tool

-   Can you think of any examples?

# Some questions

:::woo
https://app.wooclap.com/events/ECPZGP/votes?view=desktop&mobile=false
:::


## Don't do this at home!  

"Dear [Insert LLM name here],   

here is what we think 'creativity' is. Can you give me 10 items for a questionnaire that capture the different aspects of creativity.   

Give me statements that people can rate their agreement with.  

Please and thank you!

Yours sincerely,  
Josiah King"

:::{.notes}

- get responses from wooclap
- quick create items (via ELM)
  - BE CAREFUL. not ideal. 
- we'll come back to this this afternoon. 
- by this afternoon - get them to fill in items and record L v R handed? 

:::

# BREAK


## groups! dependencies! but not as we know it

```{r}
qd <- 
  lavaan::simulateData(
  "f1 =~ .8*y1 + .8*y2 + .8*y3 + .8*y4 + .9*y5 + .8*y6
   f2 =~ .8*y7 + .8*y8 + .8*y9 + .9*y10
   f1 ~~ .2*f2"
) |> mutate(across(everything(),
                   ~as.numeric(cut(.,7))))
names(qd) <- paste0("Q",1:10)

qd1 = qd[,1:6]
qd2 = qd
names(qd2) = paste0("Q",1:10)
qd2 <- qd2 |> mutate(
  ppt = paste0("P",formatC(1:nrow(qd),digits=2,flag="0")),
  .before = Q1
)

lsat_word = 
  tibble(
    Q=paste0("Q",1:10),
    wording=c("Overall, I am satisfied with my life.","In most ways my life is close to my ideal.","The conditions of my life are excellent.","I have gotten the important things I want in life.","If I could live my life over, I would change almost nothing.","My life has turned out better than I expected it would.","I feel happy and content most days.","I experience joy and pleasure regularly in my daily life.","I feel a sense of inner peace and satisfaction.","I wake up most mornings feeling positive about the day ahead.")
  )





```

## longer, wider (faster, stronger?)

::::{.columns}
:::{.column width="50%"}

```{r}
#| echo: false
qd2 |> 
  select(ppt,Q1:Q6) |>
  pivot_longer(Q1:Q6,names_to="question",values_to="response") |> gt::gt()

```

:::
:::{.column width="50%"}

```{r}
#| echo: false
qd2 |> 
  select(ppt,Q1:Q6) |> head() |> gt::gt()
```

:::
::::

## getting back to the construct?   


::::{.columns}
:::{.column width="50%"}

```{r}
gt::gt(lsat_word[1:6,])
```

:::
:::{.column width="50%"}
```{r}
#| echo: false
qd2 |> 
  select(ppt,Q1:Q6) |> head() |> gt::gt() |>
  gt::tab_spanner(columns = paste0("Q",1:6), label="life satisfaction")
```
:::
::::




## Cov Cor  


::::{.columns}
:::{.column width="50%"}

```{r}
gt::gt(lsat_word[1:6,])
```

:::
:::{.column width="50%"}
**Assumption throughout this block:** covariance is shared because they measure the same thing(s) (in theory!)  

```{r}
#| echo: true
#| eval: false
cor(lifesat_data)
```

```{r}
cor(qd1) |> round(2)
```

:::
::::


## quick refresher

-   **Variance** = Deviance around the mean of a single variable

-   **Covariance** = Representation of how two variables change together

-   **Correlation** = Standardised version of covariance


## "variables" and "dimensions"


::::{.columns}
:::{.column width="50%"}

```{r}
gt::gt(lsat_word[1:2,])
```

:::
:::{.column width="50%"}
```{r}
#| echo: true
#| eval: false
library(psych)
pairs.panels(lifesat_data)
```
```{r}
psych::pairs.panels(qd1[,1:2])
```
:::
::::



## more variables and dimensions

::::{.columns}
:::{.column width="50%"}
```{r}
gt::gt(lsat_word[1:6,])
```

:::
:::{.column width="50%"}

```{r}
#| echo: true
#| eval: false
library(psych)
pairs.panels(lifesat_data)
```
```{r}
psych::pairs.panels(qd1)
```
:::
::::



## more variables and more dimensions

::::{.columns}
:::{.column width="50%"}
```{r}
gt::gt(lsat_word[1:10,])
```

:::
:::{.column width="50%"}

```{r}
#| echo: true
#| eval: false
library(psych)
pairs.panels(lifesat_data)
```
```{r}
psych::pairs.panels(qd2[,-1])
```

:::
::::


## more variables and more dimensions (2)

::::{.columns}
:::{.column width="50%"}
```{r}
gt::gt(lsat_word[1:10,])
```
:::
:::{.column width="50%"}

```{r}
#| echo: true
#| eval: false
library(pheatmap)
cor(lifesat_data) |> pheatmap()
```
```{r}
pheatmap::pheatmap(cor(qd2[,-1]),cluster_cols=F,
                   cluster_rows=F)
```
:::
::::



## more variables and more dimensions (2)

::::{.columns}
:::{.column width="50%"}
```{r}
tibble(
  Q = lsat_word$Q,
  wording = lsat_word$wording[c(1,2,7,3,8,4,9,5,10,6)]
) |> gt::gt()
```

:::
:::{.column width="50%"}

```{r}
#| echo: true
#| eval: false
library(pheatmap)
cor(lifesat_data) |> pheatmap()
```
```{r}
qd3 = qd2[,c(1,2,7,3,8,4,9,5,10,6)+1]
names(qd3) = paste0("Q",1:10)
pheatmap::pheatmap(cor(qd3),
                   cluster_cols=F,cluster_rows=F)
```
:::
::::


## how many dimensions can you think in? 

(i max out at 3)

::::{.columns}
:::{.column width="33%"}
Three variables measuring unrelated things: 

Rate agreement on:  

- Q1 = I am the life and soul of the party
- Q2 = I like penguins
- Q3 = I enjoy studying statistics

:::
:::{.column width="33%"}
Three variables perfectly measuring the exact same thing

How much time does your phone say that you looked at it over the last 7 days?:

- In hours
- In days
- In weeks

:::
:::{.column width="33%"}
Three variables measuring the same thing but differently

Rate agreement on:  

- Q1 = I think cake is the best food
- Q2 = I feel positive when I eat cake
- Q3 = I often eat cake

:::
::::

::::{.columns}
:::{.column width="33%"}
```{r}
library(rgl)
library(psych)
set.seed(4)
R = matrix(c(1,.0,0,
             0,1,0,
             0,0,1),nrow=3)
Sigma = diag(3)%*%R%*%diag(3)
Mean <- rep(0,3)
x <- MASS::mvrnorm(500, Mean, Sigma)
x <- apply(x,2,\(x) as.numeric(cut(x,9)))
mydata <- as.data.frame(x)
names(mydata) <- c("M","P","S")
plot3d(x, box = FALSE, 
       xlab="Q1",ylab="Q2",zlab="Q3")
# plot3d(ellipse3d(cov(mydata), centre = colMeans(mydata)), col = "#A41AE4", alpha = 0.4, add = TRUE)
rglwidget()
```
:::
:::{.column width="33%"}
```{r}
set.seed(4)
xx <- runif(100,0,7*24)
x <- cbind(xx, xx/24, xx/24/7)
mydata <- as.data.frame(x)
names(mydata) <- c("M","P","S")
plot3d(x, box = FALSE, 
       xlab="hours",ylab="days",zlab="weeks")
rglwidget()
```
:::
:::{.column width="33%"}
```{r}
set.seed(4)
R = matrix(c(1,.7,.7,
             .7,1,.7,
             .7,.7,1),nrow=3)
Sigma = diag(3)%*%R%*%diag(3)
Mean <- rep(0,3)
x <- MASS::mvrnorm(500, Mean, Sigma)
x <- apply(x,2,\(x) as.numeric(cut(x,9)))
mydata <- as.data.frame(x)
names(mydata) <- c("M","P","S")
plot3d(x, box = FALSE, 
       xlab="Q1",ylab="Q2",zlab="Q3")
# plot3d(ellipse3d(cov(mydata), centre = colMeans(mydata)), col = "#A41AE4", alpha = 0.4, add = TRUE)
rglwidget()
```
:::
::::


## how many dimensions can you think in? 

(i max out at 3)

::::{.columns}
:::{.column width="33%"}
Three variables measuring unrelated things: 

Rate agreement on:  

- Q1 = I am the life and soul of the party
- Q2 = I like penguins
- Q3 = I enjoy studying statistics

:::
:::{.column width="33%"}
Three variables perfectly measuring the exact same thing

How much time does your phone say that you looked at it over the last 7 days?:

- In hours
- In days
- In weeks

:::
:::{.column width="33%"}
Three variables measuring the same thing but differently

- Q1 = I think cake is the best food
- Q2 = I feel positive when I eat cake
- Q3 = I often eat cake

:::
::::

::::{.columns}
:::{.column width="33%"}
```{r}
set.seed(4)
R = matrix(c(1,.0,0,
             0,1,0,
             0,0,1),nrow=3)
Sigma = diag(3)%*%R%*%diag(3)
Mean <- rep(0,3)
x <- MASS::mvrnorm(500, Mean, Sigma)
x <- apply(x,2,\(x) as.numeric(cut(x,9)))
mydata <- as.data.frame(x)
names(mydata) <- c("M","P","S")
plot3d(x, box = FALSE, 
       xlab="Q1",ylab="Q2",zlab="Q3")
plot3d(ellipse3d(cov(mydata), centre = colMeans(mydata)), col = "#A41AE4", alpha = 0.4, add = TRUE)
plot3d(
  abclines3d(mean(mydata$M),mean(mydata$P),mean(mydata$S),
             a=principal(x,nfactors=3,cov=TRUE,rotate="none")$loadings[,1],
             col="green"),lwd=2, add=TRUE)
plot3d(
  abclines3d(mean(mydata$M),mean(mydata$P),mean(mydata$S),
             a=principal(x,nfactors=3,cov=TRUE,rotate="none")$loadings[,2],
             col="red"), lwd=2, add=TRUE)
plot3d(
  abclines3d(mean(mydata$M),mean(mydata$P),mean(mydata$S),
    a=principal(x,nfactors=3,cov=TRUE,rotate="none")$loadings[,3],
           col="blue"), lwd=2, add=TRUE)
rglwidget()
```
:::
:::{.column width="33%"}
```{r}
set.seed(4)
xx <- runif(100,0,7*24)
x <- cbind(xx, xx/24, xx/24/7)
mydata <- as.data.frame(x)
names(mydata) <- c("M","P","S")
plot3d(x, box = FALSE, 
       xlab="hours",ylab="days",zlab="weeks")
plot3d(
  abclines3d(0,0,0,
             a=c(1,1/24,1/24/7),
             col="green"),lwd=2, add=TRUE)
rglwidget()
```
:::
:::{.column width="33%"}
```{r}
set.seed(4)
R = matrix(c(1,.7,.7,
             .7,1,.7,
             .7,.7,1),nrow=3)
Sigma = diag(3)%*%R%*%diag(3)
Mean <- rep(0,3)
x <- MASS::mvrnorm(500, Mean, Sigma)
x <- apply(x,2,\(x) as.numeric(cut(x,9)))
mydata <- as.data.frame(x)
names(mydata) <- c("M","P","S")
plot3d(x, box = FALSE, 
       xlab="Q1",ylab="Q2",zlab="Q3")
plot3d(ellipse3d(cov(mydata), centre = colMeans(mydata)), col = "#A41AE4", alpha = 0.4, add = TRUE)
plot3d(
  abclines3d(mean(mydata$M),mean(mydata$P),mean(mydata$S),
             a=principal(x,nfactors=3,cov=TRUE,rotate="none")$loadings[,1],
             col="green"),lwd=2, add=TRUE)
plot3d(
  abclines3d(mean(mydata$M),mean(mydata$P),mean(mydata$S),
             a=principal(x,nfactors=3,cov=TRUE,rotate="none")$loadings[,2],
             col="red"), lwd=2, add=TRUE)
plot3d(
  abclines3d(mean(mydata$M),mean(mydata$P),mean(mydata$S),
    a=principal(x,nfactors=3,cov=TRUE,rotate="none")$loadings[,3],
           col="blue"), lwd=2, add=TRUE)
rglwidget()
```
:::
::::


## PCA


In short:  

:::{.incremental}

- re-express covariances between $k$ items as $k$ dimensions  

- dimensions are termed "components" and are _orthogonal_ (perpendicular/uncorrelated)

- dimensions sequentially capture most variance  

:::

## eigendecomposition

::::{.columns}
:::{.column width="50%"}

In short:  

- The math behind PCA

<!-- - takes a covariance or correlation matrix -->

<!-- - turns it into a set of "eigenvalues" and corresponding "eigenvectors"   -->

<!-- - eigenvectors are "orthogonal" (perpendicular) and express the direction of each dimension -->
<!--     - "direction" here is relative to the original variables   -->

<!-- - eigenvalues express the magnitude   -->
<!--     - i.e., how big is the dimension?/how much variance does it capture? -->

:::
:::{.column width="50%"}

It's a lot  

We don't need to understand it 

![source: https://it.memedroid.com/memes/detail/3218300/And-thats-why-my-life-is-so-hard](https://images3.memedroid.com/images/UPLOADED294/6011791943290.jpeg){width=500}

:::

::::

<!-- ## v simplified case -->

<!-- ```{r} -->
<!-- library(plotly) -->
<!-- y1 <- c(3,3,2) -->
<!-- y2 <- c(-3,-3,-1) -->
<!-- y3 <- c(5,4,3) -->

<!-- # y2 <- y1*1.1 -->
<!-- # y3 <- y1*0.7 -->


<!-- df = data.frame(y1,y2,y3) -->
<!-- rownames(df) = c("Person A","Person B","Person C") -->
<!-- df -->
<!-- cor(df) -->
<!-- dft = data.frame(t(df)) -->
<!-- dft -->


<!-- arrow_data <- data.frame( -->
<!--   Person.A = c(rbind(0, dft$Person.A)), -->
<!--   Person.B = c(rbind(0, dft$Person.B)), -->
<!--   Person.C = c(rbind(0, dft$Person.C)), -->
<!--   group = rep(1:nrow(dft), each = 2) -->
<!-- ) -->
<!-- plot_ly(arrow_data, x = ~Person.A, y = ~Person.B,  -->
<!--         z = ~Person.C) |> -->
<!--   add_trace(type = "scatter3d", mode = "lines",  -->
<!--             line = list(color = "blue", width = 4), -->
<!--             split = ~group, showlegend = FALSE) |> -->
<!--   add_markers(data = dft, x = ~Person.A, y = ~Person.B, -->
<!--               z = ~Person.C, -->
<!--               marker = list(size = 5, color = "red")) |> -->
<!--   layout(scene = list( -->
<!--     xaxis = list(range = c(-5, 5)), -->
<!--     yaxis = list(range = c(-5, 5)), -->
<!--     zaxis = list(range = c(-5, 5)) -->
<!--   )) -->
<!-- ``` -->



<!-- ```{r} -->
<!-- y1 <- c(1,1,5) -->
<!-- y2 <- c(1,2,4) -->
<!-- y3 <- c(1,3,5) -->
<!-- df = data.frame(y1,y2,y3) -->
<!-- rownames(df) = c("Person A","Person B","Person C") -->
<!-- df -->
<!-- cor(df) -->

<!-- dft = data.frame(t(df)) -->
<!-- dft -->


<!-- arrow_data <- data.frame( -->
<!--   Person.A = c(rbind(0, dft$Person.A)), -->
<!--   Person.B = c(rbind(0, dft$Person.B)), -->
<!--   Person.C = c(rbind(0, dft$Person.C)), -->
<!--   group = rep(1:nrow(dft), each = 2) -->
<!-- ) -->
<!-- plot_ly(arrow_data, x = ~Person.A, y = ~Person.B,  -->
<!--         z = ~Person.C) |> -->
<!--   add_trace(type = "scatter3d", mode = "lines", -->
<!--             line = list(color = "blue", width = 4), -->
<!--             split = ~group, showlegend = FALSE) |> -->
<!--   add_markers(data = dft, x = ~Person.A, y = ~Person.B, -->
<!--               z = ~Person.C, -->
<!--               marker = list(size = 5, color = "red")) |> -->
<!--   layout(scene = list( -->
<!--     xaxis = list(range = c(0, 5)), -->
<!--     yaxis = list(range = c(0, 5)), -->
<!--     zaxis = list(range = c(0, 5)) -->
<!--   )) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- cor(df) |> round(2) -->
<!-- plot(df) -->

<!-- eigen(cor(df)) -->

<!-- ``` -->



## PCA in R

::::{.columns}
:::{.column width="30%"}
```{r}
#| echo: true
#| eval: false
cor(lifesat_data)
```
```{r}
cor(qd1) |> round(2)
```
:::
:::{.column width="70%"}

```{r}
#| echo: true
#| eval: false
library(psych)
principal(cor(lifesat_data), nfactors = 6, rotate = "none")  
```

- `rotate = "none"` is saying that we want these dimensions to be orthogonal (in future weeks we'll mix things up)

:::
::::

## PCA in R (2)

::::{.columns}
:::{.column width="30%"}
```{r}
#| echo: true
#| eval: false
cor(lifesat_data)
```
```{r}
cor(qd1) |> round(2)
```
:::
:::{.column width="70%"}

```{r}
#| echo: true
#| eval: false
library(psych)
principal(cor(lifesat_data), nfactors = 6, rotate = "none")  
```
```{r}
#| include: false
library(psych)
lifesat_data <- qd1
principal(cor(lifesat_data), nfactors = 6, rotate = "none")  
```

![](img_sandbox/pca_first_look.png)

:::
::::



## the reduction: how many components do we keep?

- how many do you want?

- scree (these are the eigenvalues - the magnitudes)

- loadings


## scores

```{r}

```





